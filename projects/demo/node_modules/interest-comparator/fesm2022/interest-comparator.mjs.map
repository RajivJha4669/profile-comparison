{"version":3,"file":"interest-comparator.mjs","sources":["../../../projects/interest-comparator/src/lib/services/similarity.service.ts","../../../projects/interest-comparator/src/lib/services/face-align.service.ts","../../../projects/interest-comparator/src/lib/interest-comparator.component.ts","../../../projects/interest-comparator/src/lib/services/face-alignment.service.ts","../../../projects/interest-comparator/src/public-api.ts","../../../projects/interest-comparator/src/interest-comparator.ts"],"sourcesContent":["// similarity.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of, throwError, from } from 'rxjs';\r\nimport { map, catchError, timeout, switchMap } from 'rxjs/operators';\r\nimport { SimilarityResult, InterestSimilarity } from '../models/similarity-result.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SimilarityService {\r\n  private apiUrl = 'https://api.api-ninjas.com/v1/textsimilarity';\r\n  private apiKey = '46ZRfGqxZ6v+Q5rG+mA3iQ==FwYzYB5gU69IPZxk';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Method to set API key from environment\r\n  setApiKey(key: string) {\r\n    this.apiKey = key;\r\n  }\r\n\r\n  async orderInterests(\r\n    user1Interests: string[],\r\n    user2Interests: string[],\r\n    user3Interests: string[] = []\r\n  ): Promise<SimilarityResult> {\r\n    try {\r\n      // Combine all interests for comparison\r\n      const allInterests = [...user1Interests, ...user2Interests, ...user3Interests];\r\n      const similarityMatrix = await this.buildSimilarityMatrix(allInterests);\r\n\r\n      // Order interests based on the design rules\r\n      const orderedUser1Interests = this.orderUser1Interests(user1Interests, user2Interests, user3Interests, allInterests, similarityMatrix);\r\n      const orderedUser2Interests = this.orderUser2Interests(user2Interests, user1Interests, user3Interests, allInterests, similarityMatrix);\r\n\r\n      return {\r\n        user1Interests,\r\n        user2Interests,\r\n        similarityMatrix,\r\n        orderedUser1Interests,\r\n        orderedUser2Interests\r\n      };\r\n    } catch (error) {\r\n      console.warn('Similarity API failed, using fallback ordering:', error);\r\n      // Fallback to original order if API fails\r\n      return {\r\n        user1Interests,\r\n        user2Interests,\r\n        similarityMatrix: [],\r\n        orderedUser1Interests: user1Interests,\r\n        orderedUser2Interests: user2Interests\r\n      };\r\n    }\r\n  }\r\n\r\n  private async buildSimilarityMatrix(interests: string[]): Promise<number[][]> {\r\n    const matrix: number[][] = [];\r\n\r\n    for (let i = 0; i < interests.length; i++) {\r\n      matrix[i] = [];\r\n      for (let j = 0; j < interests.length; j++) {\r\n        if (i === j) {\r\n          matrix[i][j] = 1; // Same item\r\n        } else if (j < i) {\r\n          matrix[i][j] = matrix[j][i]; // Use cached value\r\n        } else {\r\n          matrix[i][j] = await this.getSimilarityScore(interests[i], interests[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return matrix;\r\n  }\r\n\r\n  private async getSimilarityScore(text1: string, text2: string): Promise<number> {\r\n    try {\r\n      const headers = new HttpHeaders({\r\n        'X-Api-Key': this.apiKey,\r\n        'Content-Type': 'application/json'\r\n      });\r\n\r\n      const response = await this.http.post<{ similarity: number }>(\r\n        this.apiUrl,\r\n        { text_1: text1, text_2: text2 },\r\n        { headers }\r\n      ).pipe(\r\n        timeout(5000), // 5 second timeout\r\n        catchError(error => {\r\n          console.warn(`Similarity API error for \"${text1}\" vs \"${text2}\":`, error);\r\n          return of({ similarity: this.calculateFallbackSimilarity(text1, text2) });\r\n        })\r\n      ).toPromise();\r\n\r\n      return response?.similarity ?? this.calculateFallbackSimilarity(text1, text2);\r\n    } catch (error) {\r\n      console.warn(`Similarity API failed for \"${text1}\" vs \"${text2}\":`, error);\r\n      return this.calculateFallbackSimilarity(text1, text2);\r\n    }\r\n  }\r\n\r\n  private calculateFallbackSimilarity(text1: string, text2: string): number {\r\n    // Simple fallback similarity calculation based on string similarity\r\n    const normalized1 = text1.toLowerCase().trim();\r\n    const normalized2 = text2.toLowerCase().trim();\r\n\r\n    if (normalized1 === normalized2) return 1;\r\n\r\n    // Check for partial matches\r\n    if (normalized1.includes(normalized2) || normalized2.includes(normalized1)) {\r\n      return 0.7;\r\n    }\r\n\r\n    // Check for common words\r\n    const words1 = normalized1.split(/\\s+/);\r\n    const words2 = normalized2.split(/\\s+/);\r\n    const commonWords = words1.filter(word => words2.includes(word));\r\n\r\n    if (commonWords.length > 0) {\r\n      return Math.min(0.5, commonWords.length / Math.max(words1.length, words2.length));\r\n    }\r\n\r\n    return 0.1; // Default low similarity\r\n  }\r\n\r\n  private orderUser1Interests(\r\n    user1Interests: string[],\r\n    user2Interests: string[],\r\n    user3Interests: string[],\r\n    allInterests: string[],\r\n    matrix: number[][]\r\n  ): string[] {\r\n    if (matrix.length === 0) {\r\n      return [...user1Interests]; // Return original order if no matrix\r\n    }\r\n\r\n    const interestScores = user1Interests.map(interest => {\r\n      const index = allInterests.indexOf(interest);\r\n      if (index === -1) return { interest, score: 0 };\r\n\r\n      let totalScore = 0;\r\n      let scoreCount = 0;\r\n\r\n      // Rule 1: User 3's Influence - If User 3 also has that interest, put it closer to the top\r\n      if (user3Interests.includes(interest)) {\r\n        totalScore += 0.8; // High score for User 3 match\r\n        scoreCount++;\r\n      }\r\n\r\n      // Rule 2: User 1's Own Similarity - The more similar User 1's interests are to their own interests, the closer they should be\r\n      for (const otherInterest of user1Interests) {\r\n        if (otherInterest !== interest) {\r\n          const otherIndex = allInterests.indexOf(otherInterest);\r\n          if (otherIndex !== -1) {\r\n            totalScore += matrix[index][otherIndex] * 0.6; // Medium weight for self-similarity\r\n            scoreCount++;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Rule 3: User 1 vs User 2 Similarity - The more similar User 1's interests are to User 2's interests, the closer they should be\r\n      for (const user2Interest of user2Interests) {\r\n        const user2Index = allInterests.indexOf(user2Interest);\r\n        if (user2Index !== -1) {\r\n          totalScore += matrix[index][user2Index] * 0.4; // Lower weight for cross-user similarity\r\n          scoreCount++;\r\n        }\r\n      }\r\n\r\n      const avgScore = scoreCount > 0 ? totalScore / scoreCount : 0;\r\n      return { interest, score: avgScore };\r\n    });\r\n\r\n    // Sort by similarity score (highest first)\r\n    return interestScores\r\n      .sort((a, b) => b.score - a.score)\r\n      .map(item => item.interest);\r\n  }\r\n\r\n  private orderUser2Interests(\r\n    user2Interests: string[],\r\n    user1Interests: string[],\r\n    user3Interests: string[],\r\n    allInterests: string[],\r\n    matrix: number[][]\r\n  ): string[] {\r\n    if (matrix.length === 0) {\r\n      return [...user2Interests]; // Return original order if no matrix\r\n    }\r\n\r\n    const interestScores = user2Interests.map(interest => {\r\n      const index = allInterests.indexOf(interest);\r\n      if (index === -1) return { interest, score: 0 };\r\n\r\n      let totalScore = 0;\r\n      let scoreCount = 0;\r\n\r\n      // Rule 1: User 3's Influence - If User 3 also has that interest, put it closer to the top\r\n      if (user3Interests.includes(interest)) {\r\n        totalScore += 0.8; // High score for User 3 match\r\n        scoreCount++;\r\n      }\r\n\r\n      // Rule 2: User 2's Own Similarity - The more similar User 2's interests are to their own interests, the closer they should be\r\n      for (const otherInterest of user2Interests) {\r\n        if (otherInterest !== interest) {\r\n          const otherIndex = allInterests.indexOf(otherInterest);\r\n          if (otherIndex !== -1) {\r\n            totalScore += matrix[index][otherIndex] * 0.6; // Medium weight for self-similarity\r\n            scoreCount++;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Rule 3: User 2 vs User 1 Similarity - The more similar User 2's interests are to User 1's interests, the closer they should be\r\n      for (const user1Interest of user1Interests) {\r\n        const user1Index = allInterests.indexOf(user1Interest);\r\n        if (user1Index !== -1) {\r\n          totalScore += matrix[index][user1Index] * 0.4; // Lower weight for cross-user similarity\r\n          scoreCount++;\r\n        }\r\n      }\r\n\r\n      const avgScore = scoreCount > 0 ? totalScore / scoreCount : 0;\r\n      return { interest, score: avgScore };\r\n    });\r\n\r\n    // Sort by similarity score (highest first)\r\n    return interestScores\r\n      .sort((a, b) => b.score - a.score)\r\n      .map(item => item.interest);\r\n  }\r\n\r\n  // Method to get similarity between two specific interests\r\n  getInterestSimilarity(interest1: string, interest2: string): Observable<number> {\r\n    return from(this.getSimilarityScore(interest1, interest2)).pipe(\r\n      catchError(error => {\r\n        console.warn(`Error getting similarity for \"${interest1}\" vs \"${interest2}\":`, error);\r\n        return of(this.calculateFallbackSimilarity(interest1, interest2));\r\n      })\r\n    );\r\n  }\r\n\r\n  // Method to find shared interests (similarity >= 0.8)\r\n  findSharedInterests(user1Interests: string[], user2Interests: string[]): Observable<string[]> {\r\n    const shared: string[] = [];\r\n\r\n    // Create an array of promises for similarity checks\r\n    const similarityChecks = user1Interests.flatMap(interest1 =>\r\n      user2Interests.map(interest2 =>\r\n        this.getInterestSimilarity(interest1, interest2).toPromise()\r\n          .then(similarity => ({ interest1, interest2, similarity: similarity ?? 0 }))\r\n      )\r\n    );\r\n\r\n    return from(Promise.all(similarityChecks)).pipe(\r\n      map(results => {\r\n        for (const result of results) {\r\n          if (result.similarity >= 0.8) {\r\n            // Use User 2's interest as the shared interest (as per design)\r\n            if (!shared.includes(result.interest2)) {\r\n              shared.push(result.interest2);\r\n            }\r\n          }\r\n        }\r\n        return shared.slice(0, 2); // Limit to 2 shared interests for display\r\n      }),\r\n      catchError(error => {\r\n        console.warn('Error finding shared interests:', error);\r\n        return of(this.findSharedInterestsFallback(user1Interests, user2Interests));\r\n      })\r\n    );\r\n  }\r\n\r\n  private findSharedInterestsFallback(user1Interests: string[], user2Interests: string[]): string[] {\r\n    const shared: string[] = [];\r\n\r\n    for (const interest1 of user1Interests) {\r\n      for (const interest2 of user2Interests) {\r\n        if (this.calculateFallbackSimilarity(interest1, interest2) >= 0.8) {\r\n          if (!shared.includes(interest2)) {\r\n            shared.push(interest2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return shared.slice(0, 2);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of, firstValueFrom } from 'rxjs';\r\nimport { catchError, timeout, map } from 'rxjs/operators';\r\n\r\nexport interface FaceDetectionResult {\r\n  faces: Array<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n  }>;\r\n  success: boolean;\r\n  error?: string;\r\n  source?: string; // Track which API was used\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FaceDetectService {\r\n  private apiUrl = 'https://api.api-ninjas.com/v1/facedetect';\r\n  private apiKey = '46ZRfGqxZ6v+Q5rG+mA3iQ==FwYzYB5gU69IPZxk';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  setApiKey(key: string) {\r\n    this.apiKey = key;\r\n  }\r\n\r\n  // Detect faces in an image file\r\n  detectFaces(imageFile: File): Observable<FaceDetectionResult> {\r\n    console.log('🔍 Starting face detection for file:', {\r\n      name: imageFile.name,\r\n      size: imageFile.size,\r\n      type: imageFile.type\r\n    });\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', imageFile);\r\n\r\n    // Don't set Content-Type header - let Angular handle it for FormData\r\n    const headers = new HttpHeaders({\r\n      'X-Api-Key': this.apiKey\r\n      // Removed Accept header to let the API respond with its default format\r\n    });\r\n\r\n    console.log('📡 Sending request to API:', this.apiUrl);\r\n    console.log('🔑 Using API key:', this.apiKey ? 'Present' : 'Missing');\r\n\r\n    return this.http.post<any>(\r\n      this.apiUrl,\r\n      formData,\r\n      { headers }\r\n    ).pipe(\r\n      timeout(15000),\r\n      map(response => {\r\n        console.log('✅ Face detection API response:', response);\r\n\r\n        // Handle different response formats\r\n        let faces = [];\r\n        if (Array.isArray(response)) {\r\n          faces = response;\r\n        } else if (response && Array.isArray(response.faces)) {\r\n          faces = response.faces;\r\n        } else if (response && typeof response === 'object') {\r\n          console.warn('⚠️ Unexpected response format:', response);\r\n          faces = [];\r\n        }\r\n\r\n        return {\r\n          faces: faces,\r\n          success: true,\r\n          source: 'api-ninjas'\r\n        };\r\n      }),\r\n      catchError(error => {\r\n        console.error('❌ Face detection API error:', error);\r\n        console.error('Error details:', {\r\n          status: error.status,\r\n          message: error.message,\r\n          error: error.error\r\n        });\r\n\r\n        return of({\r\n          faces: [],\r\n          success: false,\r\n          error: `API Error: ${error.status || 'Unknown'} - ${error.message || error.error?.error || 'Face detection failed'}`,\r\n          source: 'error'\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  // Detect faces from an image URL\r\n  async detectFacesFromUrl(imageUrl: string): Promise<FaceDetectionResult> {\r\n    console.log('🌐 Starting face detection from URL:', imageUrl);\r\n\r\n    try {\r\n      // First validate the image URL\r\n      console.log('✅ Step 1: Validating image URL...');\r\n      const isValidImage = await this.validateProfileImage(imageUrl);\r\n      if (!isValidImage) {\r\n        console.warn('❌ Image validation failed');\r\n        return {\r\n          faces: [],\r\n          success: false,\r\n          error: 'Invalid image URL or image cannot be loaded',\r\n          source: 'validation'\r\n        };\r\n      }\r\n      console.log('✅ Image validation passed');\r\n\r\n      // Fetch the image with better error handling\r\n      console.log('📥 Step 2: Fetching image...');\r\n      let response: Response;\r\n      try {\r\n        response = await fetch(imageUrl, {\r\n          mode: 'cors',\r\n          headers: {\r\n            'Accept': 'image/*',\r\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\r\n          }\r\n        });\r\n        console.log('✅ CORS fetch successful');\r\n      } catch (fetchError) {\r\n        console.warn('⚠️ CORS fetch failed, trying no-cors mode:', fetchError);\r\n        try {\r\n          response = await fetch(imageUrl, {\r\n            mode: 'no-cors'\r\n          });\r\n          console.log('✅ No-CORS fetch successful');\r\n        } catch (noCorsError) {\r\n          throw new Error(`Failed to fetch image with both CORS modes: ${fetchError}, ${noCorsError}`);\r\n        }\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch image: ${response.status} ${response.statusText}`);\r\n      }\r\n\r\n      console.log('📄 Step 3: Converting to blob...');\r\n      const blob = await response.blob();\r\n      console.log('📊 Blob info:', {\r\n        type: blob.type,\r\n        size: blob.size,\r\n        sizeKB: Math.round(blob.size / 1024)\r\n      });\r\n\r\n      // Validate blob type\r\n      if (blob.type && !blob.type.startsWith('image/')) {\r\n        throw new Error(`Invalid content type: ${blob.type}. Expected image.`);\r\n      }\r\n\r\n      const file = new File([blob], 'profile.jpg', { type: blob.type || 'image/jpeg' });\r\n\r\n      // Validate file size (API might have limits)\r\n      if (file.size > 10 * 1024 * 1024) { // 10MB limit\r\n        throw new Error('Image file too large. Maximum size is 10MB.');\r\n      }\r\n\r\n      console.log('🚀 Step 4: Sending to face detection API...');\r\n      console.log(`📎 File details: ${file.name}, size: ${file.size} bytes, type: ${file.type}`);\r\n\r\n      // Try face detection\r\n      const result = await firstValueFrom(this.detectFaces(file));\r\n      console.log('🎯 Face detection result:', result);\r\n\r\n      return result || {\r\n        faces: [],\r\n        success: false,\r\n        error: 'No result from face detection',\r\n        source: 'unknown'\r\n      };\r\n    } catch (error) {\r\n      console.error('💥 Face detection from URL failed:', error);\r\n      return {\r\n        faces: [],\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        source: 'error'\r\n      };\r\n    }\r\n  }\r\n\r\n  // Enhanced image validation with better error handling\r\n  validateProfileImage(imageUrl: string): Promise<boolean> {\r\n    return new Promise((resolve) => {\r\n      const img = new Image();\r\n      img.crossOrigin = 'anonymous';\r\n\r\n      const timeoutId = setTimeout(() => {\r\n        resolve(false);\r\n      }, 10000); // 10 second timeout\r\n\r\n      img.onload = () => {\r\n        clearTimeout(timeoutId);\r\n        // Check if image has reasonable dimensions\r\n        if (img.width < 50 || img.height < 50) {\r\n          resolve(false);\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      };\r\n\r\n      img.onerror = () => {\r\n        clearTimeout(timeoutId);\r\n        resolve(false);\r\n      };\r\n\r\n      img.src = imageUrl;\r\n    });\r\n  }\r\n\r\n  // Get API status for debugging\r\n  getApiStatus(): { available: boolean; hasKey: boolean } {\r\n    return {\r\n      available: true,\r\n      hasKey: !!this.apiKey\r\n    };\r\n  }\r\n\r\n  // Quick API connectivity test\r\n  async testApiQuick(): Promise<{ success: boolean; message: string; details?: any }> {\r\n    try {\r\n      console.log('🧪 Quick API test starting...');\r\n\r\n      // Test with minimal payload\r\n      const response = await fetch(this.apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'X-Api-Key': this.apiKey,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({})\r\n      });\r\n\r\n      const responseText = await response.text();\r\n      console.log('🧪 Quick test response:', { status: response.status, text: responseText });\r\n\r\n      return {\r\n        success: response.status !== 401 && response.status !== 403,\r\n        message: `API responded with status ${response.status}`,\r\n        details: {\r\n          status: response.status,\r\n          statusText: response.statusText,\r\n          response: responseText\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('🧪 Quick API test failed:', error);\r\n      return {\r\n        success: false,\r\n        message: error instanceof Error ? error.message : 'Unknown test error'\r\n      };\r\n    }\r\n  }\r\n\r\n  // Test method to verify API connectivity\r\n  async testApiConnection(): Promise<{ success: boolean; message: string }> {\r\n    try {\r\n      // Create a small test image (1x1 pixel PNG)\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = 100;\r\n      canvas.height = 100;\r\n      const ctx = canvas.getContext('2d');\r\n      if (ctx) {\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.fillRect(0, 0, 100, 100);\r\n      }\r\n\r\n      return new Promise((resolve) => {\r\n        canvas.toBlob(async (blob) => {\r\n          if (!blob) {\r\n            resolve({ success: false, message: 'Failed to create test image' });\r\n            return;\r\n          }\r\n\r\n          const testFile = new File([blob], 'test.png', { type: 'image/png' });\r\n          console.log('Testing API with file:', testFile.name, testFile.size, testFile.type);\r\n\r\n          try {\r\n            const result = await firstValueFrom(this.detectFaces(testFile));\r\n            resolve({\r\n              success: result.success,\r\n              message: result.success ? 'API is working correctly' : (result.error || 'API test failed')\r\n            });\r\n          } catch (error) {\r\n            resolve({\r\n              success: false,\r\n              message: error instanceof Error ? error.message : 'Unknown API test error'\r\n            });\r\n          }\r\n        }, 'image/png');\r\n      });\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error instanceof Error ? error.message : 'Failed to create test image'\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, ElementRef, ViewChild, AfterViewInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { UserProfile } from './models/interest.model';\r\nimport { SimilarityService } from './services/similarity.service';\r\nimport { FaceDetectService } from './services/face-align.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n// Import Swiper components and modules\r\nimport Swiper from 'swiper';\r\nimport { Navigation, Pagination } from 'swiper/modules';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/pagination';\r\n\r\n@Component({\r\n  selector: 'lib-interest-comparator',\r\n  standalone: true,\r\n  imports: [CommonModule, HttpClientModule],\r\n  template: `\r\n    <div class=\"matcher-home\"\r\n         [class.loading]=\"isLoading\"\r\n         [class.api-error]=\"apiError\"\r\n         #comparatorContainer>\r\n\r\n      <!-- Mobile Status Bar -->\r\n      <div class=\"status-bar\">\r\n        <span class=\"time\">9:41</span>\r\n        <div class=\"status-icons\">\r\n          <span class=\"signal\">📶</span>\r\n          <span class=\"wifi\">📶</span>\r\n          <span class=\"battery\">🔋</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Dark Top Section (60% of screen) -->\r\n      <div class=\"top-section\">\r\n        <div class=\"interaction-area\">\r\n          <div class=\"user-labels\">\r\n            <span class=\"user-label\">User 1 Interests</span>\r\n            <span class=\"user-label\">User 2 Interests</span>\r\n          </div>\r\n          <div class=\"swipe-indicator\">\r\n            <div class=\"hand-icon\">👋</div>\r\n            <div class=\"swipe-arrows\">\r\n              <span class=\"arrow\">←</span>\r\n              <span class=\"arrow\">→</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Profile Comparison Component (40% of screen) -->\r\n      <div class=\"profile-comparison\">\r\n        <!-- Background with blurred faces -->\r\n        <div class=\"background-faces\">\r\n          <div class=\"face user1-face\" [style.background-image]=\"'url(' + user1.image + ')'\"></div>\r\n          <div class=\"face user2-face\" [style.background-image]=\"'url(' + user2.image + ')'\"></div>\r\n        </div>\r\n\r\n        <!-- Face Detection Results Display -->\r\n        <div class=\"face-detection-results\" *ngIf=\"showFaceDetectionResults\">\r\n          <div class=\"face-result user1-result\">\r\n            <img [src]=\"user1.image\" alt=\"User 1\" class=\"face-image\" />\r\n            <div *ngFor=\"let face of user1Faces; let i = index\"\r\n                 class=\"face-box\"\r\n                 [ngStyle]=\"{\r\n                   left: (face.x / 300 * 100) + '%',\r\n                   top: (face.y / 300 * 100) + '%',\r\n                   width: (face.width / 300 * 100) + '%',\r\n                   height: (face.height / 300 * 100) + '%'\r\n                 }\">\r\n              <span class=\"face-label\">Face {{i + 1}}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"face-result user2-result\">\r\n            <img [src]=\"user2.image\" alt=\"User 2\" class=\"face-image\" />\r\n            <div *ngFor=\"let face of user2Faces; let i = index\"\r\n                 class=\"face-box\"\r\n                 [ngStyle]=\"{\r\n                   left: (face.x / 300 * 100) + '%',\r\n                   top: (face.y / 300 * 100) + '%',\r\n                   width: (face.width / 300 * 100) + '%',\r\n                   height: (face.height / 300 * 100) + '%'\r\n                 }\">\r\n              <span class=\"face-label\">Face {{i + 1}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Swiper container for interests -->\r\n        <div class=\"swiper\" #swiperContainer>\r\n          <div class=\"swiper-wrapper\">\r\n            <!-- Slide 1: Main comparison view -->\r\n            <div class=\"swiper-slide\">\r\n              <div class=\"comparison-container\">\r\n                <!-- User 1 Interests (Left) -->\r\n                <div class=\"interests-column user1-column\">\r\n                  <div *ngFor=\"let interest of orderedUser1Interests; trackBy: trackByInterest\"\r\n                       class=\"interest-item\"\r\n                       [class.shared-interest]=\"isSharedInterest(interest)\">\r\n                    <span class=\"interest-text\">{{ interest }}</span>\r\n                    <div class=\"interest-line\"></div>\r\n                  </div>\r\n                  <button class=\"view-profile-btn\" (click)=\"onViewProfile('user1')\">\r\n                    View Profile →\r\n                  </button>\r\n                </div>\r\n\r\n                <!-- Middle shared interests -->\r\n                <div class=\"middle-section\" *ngIf=\"sharedInterests.length > 0\">\r\n                  <div *ngFor=\"let shared of sharedInterests; let i = index\"\r\n                       class=\"shared-interest-card\"\r\n                       [class.cyan-glow]=\"i === 0\"\r\n                       [class.magenta-glow]=\"i === 1\">\r\n                    <span class=\"shared-text\">{{ shared }}</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- User 2 Interests (Right) -->\r\n                <div class=\"interests-column user2-column\">\r\n                  <div *ngFor=\"let interest of orderedUser2Interests; trackBy: trackByInterest\"\r\n                       class=\"interest-item\"\r\n                       [class.shared-interest]=\"isSharedInterest(interest)\">\r\n                    <span class=\"interest-text\">{{ interest }}</span>\r\n                    <div class=\"interest-line\"></div>\r\n                  </div>\r\n                  <button class=\"view-profile-btn\" (click)=\"onViewProfile('user2')\">\r\n                    ← View Profile\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Additional slides for overflow content -->\r\n            <div class=\"swiper-slide\" *ngFor=\"let slide of additionalSlides; let i = index\">\r\n              <div class=\"additional-content\">\r\n                <h3>Additional Interests</h3>\r\n                <div class=\"additional-interests\">\r\n                  <div *ngFor=\"let interest of slide.interests\" class=\"interest-item\">\r\n                    <span class=\"interest-text\">{{ interest }}</span>\r\n                    <div class=\"interest-line\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Swiper pagination -->\r\n          <div class=\"swiper-pagination\"></div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Loading Overlay -->\r\n      <div *ngIf=\"isLoading\" class=\"loading-overlay\">\r\n        <div class=\"loading-spinner\">\r\n          <div class=\"spinner-ring\"></div>\r\n          <div class=\"spinner-text\">{{ loadingMessage }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .matcher-home {\r\n      width: 100%;\r\n      max-width: 375px;\r\n      height: 100vh;\r\n      margin: 0 auto;\r\n      background: #000000;\r\n      position: relative;\r\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n      overflow: hidden;\r\n      display: flex;\r\n      flex-direction: column;\r\n\r\n      &.loading {\r\n        opacity: 0.7;\r\n        pointer-events: none;\r\n      }\r\n\r\n      &.api-error {\r\n        border: 2px solid #ff6b6b;\r\n      }\r\n    }\r\n\r\n    .status-bar {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 8px 16px;\r\n      background: #000000;\r\n      color: white;\r\n      font-size: 14px;\r\n      font-weight: 600;\r\n      z-index: 100;\r\n    }\r\n\r\n    .status-icons {\r\n      display: flex;\r\n      gap: 4px;\r\n    }\r\n\r\n    .top-section {\r\n      flex: 0 0 60%;\r\n      background: #000000;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      position: relative;\r\n    }\r\n\r\n    .interaction-area {\r\n      text-align: center;\r\n      color: white;\r\n    }\r\n\r\n    .user-labels {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-bottom: 20px;\r\n      padding: 0 40px;\r\n    }\r\n\r\n    .user-label {\r\n      font-size: 16px;\r\n      font-weight: 600;\r\n      color: white;\r\n    }\r\n\r\n    .swipe-indicator {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      gap: 12px;\r\n    }\r\n\r\n    .hand-icon {\r\n      font-size: 24px;\r\n    }\r\n\r\n    .swipe-arrows {\r\n      display: flex;\r\n      gap: 8px;\r\n    }\r\n\r\n    .arrow {\r\n      font-size: 18px;\r\n      color: white;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .profile-comparison {\r\n      flex: 0 0 40%;\r\n      position: relative;\r\n      background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);\r\n      overflow: hidden;\r\n    }\r\n\r\n    .background-faces {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      filter: blur(8px);\r\n      opacity: 0.3;\r\n      z-index: 1;\r\n    }\r\n\r\n    .face {\r\n      position: absolute;\r\n      width: 120px;\r\n      height: 120px;\r\n      border-radius: 50%;\r\n      background-size: cover;\r\n      background-position: center;\r\n    }\r\n\r\n    .user1-face {\r\n      left: 20px;\r\n      top: 20px;\r\n    }\r\n\r\n    .user2-face {\r\n      right: 20px;\r\n      top: 20px;\r\n    }\r\n\r\n    /* Face Detection Results Display */\r\n    .face-detection-results {\r\n      position: absolute;\r\n      top: 10px;\r\n      left: 10px;\r\n      right: 10px;\r\n      z-index: 10;\r\n      display: flex;\r\n      gap: 10px;\r\n      pointer-events: none;\r\n    }\r\n\r\n    .face-result {\r\n      flex: 1;\r\n      position: relative;\r\n      max-width: 150px;\r\n    }\r\n\r\n    .face-image {\r\n      width: 100%;\r\n      height: auto;\r\n      border-radius: 8px;\r\n      border: 2px solid rgba(255, 255, 255, 0.3);\r\n    }\r\n\r\n    .face-box {\r\n      position: absolute;\r\n      border: 2px solid #00ff00;\r\n      background: rgba(0, 255, 0, 0.1);\r\n      pointer-events: none;\r\n    }\r\n\r\n    .face-label {\r\n      position: absolute;\r\n      top: -20px;\r\n      left: 0;\r\n      background: #00ff00;\r\n      color: #000;\r\n      padding: 2px 6px;\r\n      border-radius: 4px;\r\n      font-size: 10px;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .swiper {\r\n      width: 100%;\r\n      height: 100%;\r\n      position: relative;\r\n      z-index: 2;\r\n    }\r\n\r\n    .swiper-slide {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      padding: 20px;\r\n    }\r\n\r\n    .comparison-container {\r\n      display: flex;\r\n      height: 100%;\r\n      width: 100%;\r\n      gap: 20px;\r\n    }\r\n\r\n    .interests-column {\r\n      flex: 1;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 8px;\r\n    }\r\n\r\n    .user1-column {\r\n      align-items: flex-start;\r\n    }\r\n\r\n    .user2-column {\r\n      align-items: flex-end;\r\n    }\r\n\r\n    .interest-item {\r\n      background: rgba(255, 255, 255, 0.9);\r\n      padding: 8px 12px;\r\n      border-radius: 6px;\r\n      max-width: 80%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 4px;\r\n      transition: all 0.2s ease;\r\n\r\n      &.shared-interest {\r\n        background: rgba(102, 126, 234, 0.2);\r\n        border: 1px solid rgba(102, 126, 234, 0.5);\r\n      }\r\n    }\r\n\r\n    .interest-text {\r\n      font-size: 12px;\r\n      font-weight: 500;\r\n      color: #2c3e50;\r\n      word-wrap: break-word;\r\n    }\r\n\r\n    .interest-line {\r\n      height: 2px;\r\n      background: #e9ecef;\r\n      width: 100%;\r\n      border-radius: 1px;\r\n    }\r\n\r\n    .middle-section {\r\n      position: absolute;\r\n      left: 50%;\r\n      top: 50%;\r\n      transform: translate(-50%, -50%);\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 12px;\r\n      z-index: 3;\r\n    }\r\n\r\n    .shared-interest-card {\r\n      background: rgba(255, 255, 255, 0.95);\r\n      padding: 12px 16px;\r\n      border-radius: 8px;\r\n      text-align: center;\r\n      min-width: 100px;\r\n      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\r\n\r\n      &.cyan-glow {\r\n        box-shadow: 0 4px 20px rgba(0, 255, 255, 0.4);\r\n        border: 2px solid rgba(0, 255, 255, 0.3);\r\n      }\r\n\r\n      &.magenta-glow {\r\n        box-shadow: 0 4px 20px rgba(255, 0, 255, 0.4);\r\n        border: 2px solid rgba(255, 0, 255, 0.3);\r\n      }\r\n    }\r\n\r\n    .shared-text {\r\n      font-size: 14px;\r\n      font-weight: 600;\r\n      color: #2c3e50;\r\n    }\r\n\r\n    .view-profile-btn {\r\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n      color: white;\r\n      border: none;\r\n      padding: 8px 16px;\r\n      border-radius: 16px;\r\n      font-size: 12px;\r\n      font-weight: 600;\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n      margin-top: auto;\r\n      box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);\r\n\r\n      &:hover:not(:disabled) {\r\n        transform: translateY(-1px);\r\n        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\r\n      }\r\n\r\n      &:disabled {\r\n        opacity: 0.6;\r\n        cursor: not-allowed;\r\n      }\r\n    }\r\n\r\n    .additional-content {\r\n      text-align: center;\r\n      color: white;\r\n      width: 100%;\r\n    }\r\n\r\n    .additional-content h3 {\r\n      margin-bottom: 20px;\r\n      font-size: 18px;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .additional-interests {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 8px;\r\n      align-items: center;\r\n    }\r\n\r\n    .additional-interests .interest-item {\r\n      max-width: 200px;\r\n    }\r\n\r\n    /* Swiper pagination styles */\r\n    .swiper-pagination {\r\n      position: absolute;\r\n      bottom: 10px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n    }\r\n\r\n    .swiper-pagination-bullet {\r\n      background: rgba(255, 255, 255, 0.5);\r\n      opacity: 1;\r\n    }\r\n\r\n    .swiper-pagination-bullet-active {\r\n      background: #667eea;\r\n    }\r\n\r\n    .loading-overlay {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      background: rgba(0, 0, 0, 0.8);\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      z-index: 100;\r\n    }\r\n\r\n    .loading-spinner {\r\n      text-align: center;\r\n      color: white;\r\n    }\r\n\r\n    .spinner-ring {\r\n      width: 40px;\r\n      height: 40px;\r\n      border: 4px solid rgba(255, 255, 255, 0.3);\r\n      border-top: 4px solid #667eea;\r\n      border-radius: 50%;\r\n      animation: spin 1s linear infinite;\r\n      margin: 0 auto 16px;\r\n    }\r\n\r\n    .spinner-text {\r\n      color: white;\r\n      font-size: 14px;\r\n    }\r\n\r\n    @keyframes spin {\r\n      0% { transform: rotate(0deg); }\r\n      100% { transform: rotate(360deg); }\r\n    }\r\n\r\n    /* Responsive adjustments */\r\n    @media (max-width: 375px) {\r\n      .matcher-home {\r\n        max-width: 100%;\r\n      }\r\n\r\n      .swiper-slide {\r\n        padding: 16px;\r\n      }\r\n\r\n      .comparison-container {\r\n        gap: 16px;\r\n      }\r\n\r\n      .interest-item {\r\n        max-width: 85%;\r\n      }\r\n\r\n      .shared-interest-card {\r\n        min-width: 80px;\r\n        padding: 10px 12px;\r\n      }\r\n\r\n      .face-detection-results {\r\n        top: 5px;\r\n        left: 5px;\r\n        right: 5px;\r\n        gap: 5px;\r\n      }\r\n\r\n      .face-result {\r\n        max-width: 120px;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class InterestComparatorComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @Input() user1!: UserProfile;\r\n  @Input() user2!: UserProfile;\r\n  @Input() user3?: UserProfile;\r\n  @Input() apiKey?: string;\r\n  @Input() similarityThreshold: number = 0.8; // Configurable similarity threshold\r\n  @Output() viewProfile = new EventEmitter<{user: 'user1' | 'user2'}>();\r\n\r\n  @ViewChild('comparatorContainer') comparatorContainer!: ElementRef;\r\n  @ViewChild('swiperContainer') swiperContainer!: ElementRef;\r\n\r\n  orderedUser1Interests: string[] = [];\r\n  orderedUser2Interests: string[] = [];\r\n  sharedInterests: string[] = [];\r\n  isLoading = true;\r\n  apiError = false;\r\n  similarityMatrix: number[][] = [];\r\n  allInterests: string[] = [];\r\n  additionalSlides: Array<{interests: string[]}> = [];\r\n\r\n  // Face detection results\r\n  user1Faces: any[] = [];\r\n  user2Faces: any[] = [];\r\n  showFaceDetectionResults = false;\r\n  loadingMessage = 'Initializing...';\r\n\r\n  private swiper?: Swiper;\r\n  private destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private similarityService: SimilarityService,\r\n    private faceAlignService: FaceDetectService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    console.log('🚀 Interest Comparator Component Initializing...');\r\n\r\n    // Set API key if provided\r\n    if (this.apiKey) {\r\n      this.faceAlignService.setApiKey(this.apiKey);\r\n      this.similarityService.setApiKey(this.apiKey);\r\n      console.log('✅ API key configured');\r\n    } else {\r\n      console.warn('⚠️ No API key provided, using fallback mode');\r\n    }\r\n\r\n    this.initializeComponent();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initializeSwiper();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.swiper) {\r\n      this.swiper.destroy();\r\n    }\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  private initializeSwiper() {\r\n    if (this.swiperContainer) {\r\n      try {\r\n        console.log('🔄 Initializing Swiper...');\r\n        this.swiper = new Swiper(this.swiperContainer.nativeElement, {\r\n          modules: [Navigation, Pagination],\r\n          direction: 'horizontal',\r\n          loop: false,\r\n          pagination: {\r\n            el: '.swiper-pagination',\r\n            clickable: true,\r\n          },\r\n          spaceBetween: 0,\r\n          slidesPerView: 1,\r\n          allowTouchMove: true,\r\n          resistance: true,\r\n          resistanceRatio: 0.85,\r\n          speed: 300,\r\n          on: {\r\n            init: (swiper) => {\r\n              console.log('✅ Swiper initialized successfully');\r\n            },\r\n            slideChange: (swiper) => {\r\n              console.log('📱 Slide changed to:', swiper.activeIndex);\r\n            }\r\n          }\r\n        });\r\n        console.log('✅ Swiper setup complete');\r\n      } catch (error) {\r\n        console.error('❌ Swiper initialization failed:', error);\r\n        this.swiper = undefined;\r\n      }\r\n    } else {\r\n      console.warn('⚠️ Swiper container not found');\r\n    }\r\n  }\r\n\r\n  private async initializeComponent() {\r\n    try {\r\n      this.isLoading = true;\r\n      this.apiError = false;\r\n      this.loadingMessage = 'Processing interests...';\r\n\r\n      console.log('🚀 Starting component initialization...');\r\n      console.log('👤 User 1:', this.user1.name, 'Interests:', this.user1.interests);\r\n      console.log('👤 User 2:', this.user2.name, 'Interests:', this.user2.interests);\r\n      if (this.user3) {\r\n        console.log('👤 User 3:', this.user3.name, 'Interests:', this.user3.interests);\r\n      }\r\n\r\n      // Step 1: Process interests with similarity analysis\r\n      console.log('📊 Step 1: Processing interest similarity...');\r\n      const similarityResult = await this.similarityService.orderInterests(\r\n        this.user1.interests,\r\n        this.user2.interests,\r\n        this.user3?.interests || []\r\n      );\r\n\r\n      this.orderedUser1Interests = similarityResult.orderedUser1Interests;\r\n      this.orderedUser2Interests = similarityResult.orderedUser2Interests;\r\n      this.similarityMatrix = similarityResult.similarityMatrix;\r\n      this.allInterests = [...this.user1.interests, ...this.user2.interests, ...(this.user3?.interests || [])];\r\n\r\n      console.log('✅ Interest ordering complete');\r\n      console.log('📋 Ordered User 1 interests:', this.orderedUser1Interests);\r\n      console.log('📋 Ordered User 2 interests:', this.orderedUser2Interests);\r\n\r\n      // Step 2: Find shared interests using configurable threshold\r\n      console.log('🔍 Step 2: Finding shared interests with threshold:', this.similarityThreshold);\r\n      this.sharedInterests = await this.findSharedInterests();\r\n      console.log('✅ Shared interests found:', this.sharedInterests);\r\n\r\n      // Step 3: Create additional slides for overflow content\r\n      this.createAdditionalSlides();\r\n\r\n      // Step 4: Process face detection for both users\r\n      this.loadingMessage = 'Detecting faces...';\r\n      console.log('📸 Step 3: Processing face detection...');\r\n      await this.processFaceDetection();\r\n\r\n      // Show face detection results\r\n      this.showFaceDetectionResults = true;\r\n\r\n    } catch (error) {\r\n      console.error('❌ Error initializing component:', error);\r\n      this.apiError = true;\r\n      // Fallback to original order\r\n      this.orderedUser1Interests = this.user1.interests;\r\n      this.orderedUser2Interests = this.user2.interests;\r\n      this.sharedInterests = this.findSharedInterestsFallback();\r\n      this.createAdditionalSlides();\r\n    } finally {\r\n      this.isLoading = false;\r\n      console.log('✅ Component initialization complete');\r\n    }\r\n  }\r\n\r\n  private createAdditionalSlides() {\r\n    this.additionalSlides = [];\r\n\r\n    // Create slides for additional interests if there are too many\r\n    const allInterests = [...this.orderedUser1Interests, ...this.orderedUser2Interests];\r\n    const maxInterestsPerSlide = 6;\r\n\r\n    for (let i = 0; i < allInterests.length; i += maxInterestsPerSlide) {\r\n      const slideInterests = allInterests.slice(i, i + maxInterestsPerSlide);\r\n      if (slideInterests.length > 0) {\r\n        this.additionalSlides.push({ interests: slideInterests });\r\n      }\r\n    }\r\n\r\n    console.log('📱 Created', this.additionalSlides.length, 'additional slides');\r\n  }\r\n\r\n  private async processFaceDetection() {\r\n    try {\r\n      console.log('🔍 Starting face detection process...');\r\n\r\n      // Process User 1 face detection\r\n      console.log('👤 Processing User 1 face detection:', this.user1.image);\r\n      const user1Result = await this.faceAlignService.detectFacesFromUrl(this.user1.image);\r\n      this.user1Faces = user1Result.faces || [];\r\n      console.log('✅ User 1 face detection result:', user1Result.success ? `${this.user1Faces.length} faces found` : user1Result.error);\r\n      console.log('👤 User 1 faces:', this.user1Faces);\r\n\r\n      // Process User 2 face detection\r\n      console.log('👤 Processing User 2 face detection:', this.user2.image);\r\n      const user2Result = await this.faceAlignService.detectFacesFromUrl(this.user2.image);\r\n      this.user2Faces = user2Result.faces || [];\r\n      console.log('✅ User 2 face detection result:', user2Result.success ? `${this.user2Faces.length} faces found` : user2Result.error);\r\n      console.log('👤 User 2 faces:', this.user2Faces);\r\n\r\n      // Store face data for potential future use (eye-to-eye alignment)\r\n      if (user1Result.success && user2Result.success) {\r\n        (this.user1 as any).faceData = this.user1Faces;\r\n        (this.user2 as any).faceData = this.user2Faces;\r\n        console.log('💾 Face data stored for both users');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('💥 Face detection process failed:', error);\r\n    }\r\n  }\r\n\r\n  private async findSharedInterests(): Promise<string[]> {\r\n    try {\r\n      // Use the configurable similarity threshold\r\n      const shared = await this.similarityService.findSharedInterests(\r\n        this.user1.interests,\r\n        this.user2.interests\r\n      ).toPromise();\r\n\r\n      // Filter by configurable threshold\r\n      const filteredShared = shared?.filter(interest => {\r\n        // Check if this interest has high similarity with any user2 interest\r\n        return this.user2.interests.some(user2Interest =>\r\n          this.calculateFallbackSimilarity(interest, user2Interest) >= this.similarityThreshold\r\n        );\r\n      }) || [];\r\n\r\n      return filteredShared.slice(0, 2); // Limit to 2 shared interests for display\r\n    } catch (error) {\r\n      console.warn('Error finding shared interests:', error);\r\n      return this.findSharedInterestsFallback();\r\n    }\r\n  }\r\n\r\n  private findSharedInterestsFallback(): string[] {\r\n    const shared: string[] = [];\r\n\r\n    for (const interest1 of this.user1.interests) {\r\n      for (const interest2 of this.user2.interests) {\r\n        if (this.calculateFallbackSimilarity(interest1, interest2) >= this.similarityThreshold) {\r\n          // Use User 2's interest as the shared interest (as per design)\r\n          if (!shared.includes(interest2)) {\r\n            shared.push(interest2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return shared.slice(0, 2);\r\n  }\r\n\r\n  private calculateFallbackSimilarity(text1: string, text2: string): number {\r\n    const normalized1 = text1.toLowerCase().trim();\r\n    const normalized2 = text2.toLowerCase().trim();\r\n\r\n    if (normalized1 === normalized2) return 1;\r\n\r\n    if (normalized1.includes(normalized2) || normalized2.includes(normalized1)) {\r\n      return 0.8;\r\n    }\r\n\r\n    const words1 = normalized1.split(/\\s+/);\r\n    const words2 = normalized2.split(/\\s+/);\r\n    const commonWords = words1.filter(word => words2.includes(word));\r\n\r\n    if (commonWords.length > 0) {\r\n      return Math.min(0.7, commonWords.length / Math.max(words1.length, words2.length));\r\n    }\r\n\r\n    return 0.1;\r\n  }\r\n\r\n  isSharedInterest(interest: string): boolean {\r\n    return this.sharedInterests.includes(interest);\r\n  }\r\n\r\n  // Utility methods\r\n  trackByInterest(index: number, interest: string): string {\r\n    return interest;\r\n  }\r\n\r\n  onViewProfile(user: 'user1' | 'user2'): void {\r\n    console.log(`🔍 View Profile clicked for: ${user}`);\r\n    this.viewProfile.emit({ user });\r\n    alert('You have been routed to a profile page.');\r\n  }\r\n\r\n  // Public method to get face detection results\r\n  getFaceDetectionResults() {\r\n    return {\r\n      user1: {\r\n        faces: this.user1Faces,\r\n        image: this.user1.image\r\n      },\r\n      user2: {\r\n        faces: this.user2Faces,\r\n        image: this.user2.image\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { FaceDetectService, FaceDetectionResult } from './face-align.service';\r\n\r\nexport interface AlignmentResult {\r\n  success: boolean;\r\n  user1AlignedImage?: string; // Base64 data URL\r\n  user2AlignedImage?: string; // Base64 data URL\r\n  user1FaceData?: FaceData;\r\n  user2FaceData?: FaceData;\r\n  error?: string;\r\n}\r\n\r\nexport interface FaceData {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  eyeCenter?: { x: number; y: number };\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FaceAlignmentService {\r\n  constructor(private faceDetectService: FaceDetectService) {}\r\n\r\n  /**\r\n   * Align two user images eye-to-eye for consistent comparison\r\n   */\r\n  async alignUserImages(user1ImageUrl: string, user2ImageUrl: string): Promise<AlignmentResult> {\r\n    try {\r\n      console.log('Starting face alignment for two users...');\r\n\r\n      // Detect faces in both images\r\n      const [user1Detection, user2Detection] = await Promise.all([\r\n        this.faceDetectService.detectFacesFromUrl(user1ImageUrl),\r\n        this.faceDetectService.detectFacesFromUrl(user2ImageUrl)\r\n      ]);\r\n\r\n      // Check if face detection was successful for both users\r\n      if (!user1Detection.success || !user2Detection.success) {\r\n        return {\r\n          success: false,\r\n          error: `Face detection failed: User1=${user1Detection.success}, User2=${user2Detection.success}. ` +\r\n                 `Errors: ${user1Detection.error || 'none'}, ${user2Detection.error || 'none'}`\r\n        };\r\n      }\r\n\r\n      // Check if faces were found\r\n      if (user1Detection.faces.length === 0 || user2Detection.faces.length === 0) {\r\n        return {\r\n          success: false,\r\n          error: `No faces detected: User1=${user1Detection.faces.length} faces, User2=${user2Detection.faces.length} faces`\r\n        };\r\n      }\r\n\r\n      // Get the largest face from each image (assuming it's the main subject)\r\n      const user1Face = this.getLargestFace(user1Detection.faces);\r\n      const user2Face = this.getLargestFace(user2Detection.faces);\r\n\r\n      // Calculate estimated eye positions\r\n      const user1FaceData: FaceData = {\r\n        ...user1Face,\r\n        eyeCenter: this.estimateEyeCenter(user1Face)\r\n      };\r\n\r\n      const user2FaceData: FaceData = {\r\n        ...user2Face,\r\n        eyeCenter: this.estimateEyeCenter(user2Face)\r\n      };\r\n\r\n      // Load and align the images\r\n      const [user1AlignedImage, user2AlignedImage] = await Promise.all([\r\n        this.alignImageToStandardSize(user1ImageUrl, user1FaceData),\r\n        this.alignImageToStandardSize(user2ImageUrl, user2FaceData)\r\n      ]);\r\n\r\n      return {\r\n        success: true,\r\n        user1AlignedImage,\r\n        user2AlignedImage,\r\n        user1FaceData,\r\n        user2FaceData\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('Face alignment error:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown alignment error'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the largest face from detected faces (most likely to be the main subject)\r\n   */\r\n  private getLargestFace(faces: Array<{ x: number; y: number; width: number; height: number }>) {\r\n    return faces.reduce((largest, current) => {\r\n      const currentArea = current.width * current.height;\r\n      const largestArea = largest.width * largest.height;\r\n      return currentArea > largestArea ? current : largest;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Estimate eye center position based on face bounding box\r\n   * Eyes are typically located at about 1/3 down from the top of the face\r\n   * and centered horizontally\r\n   */\r\n  private estimateEyeCenter(face: { x: number; y: number; width: number; height: number }) {\r\n    return {\r\n      x: face.x + (face.width / 2),\r\n      y: face.y + (face.height * 0.35) // Eyes are roughly 35% down from top of face\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Align image to standard size with face centered and eyes at consistent position\r\n   */\r\n  private async alignImageToStandardSize(imageUrl: string, faceData: FaceData): Promise<string> {\r\n    return new Promise((resolve, reject) => {\r\n      const img = new Image();\r\n      img.crossOrigin = 'anonymous';\r\n\r\n      img.onload = () => {\r\n        try {\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          if (!ctx) {\r\n            reject(new Error('Failed to get canvas context'));\r\n            return;\r\n          }\r\n\r\n          // Standard output size\r\n          const outputSize = 300;\r\n          canvas.width = outputSize;\r\n          canvas.height = outputSize;\r\n\r\n          // Calculate scaling and positioning\r\n          const scale = outputSize / Math.max(faceData.width, faceData.height) * 0.8; // Scale face to 80% of canvas\r\n          const scaledFaceWidth = faceData.width * scale;\r\n          const scaledFaceHeight = faceData.height * scale;\r\n\r\n          // Center the face in the canvas\r\n          const targetX = (outputSize - scaledFaceWidth) / 2;\r\n          const targetY = (outputSize - scaledFaceHeight) / 2;\r\n\r\n          // Calculate source position to crop around the face\r\n          const sourceX = Math.max(0, faceData.x - (faceData.width * 0.3)); // Include some margin\r\n          const sourceY = Math.max(0, faceData.y - (faceData.height * 0.4)); // Include forehead\r\n          const sourceWidth = Math.min(img.width - sourceX, faceData.width * 1.6);\r\n          const sourceHeight = Math.min(img.height - sourceY, faceData.height * 1.8);\r\n\r\n          // Draw the aligned image\r\n          ctx.fillStyle = '#f0f0f0'; // Light gray background\r\n          ctx.fillRect(0, 0, outputSize, outputSize);\r\n\r\n          ctx.drawImage(\r\n            img,\r\n            sourceX, sourceY, sourceWidth, sourceHeight,\r\n            targetX, targetY, scaledFaceWidth, scaledFaceHeight\r\n          );\r\n\r\n          // Draw face detection overlay for debugging\r\n          if (faceData.eyeCenter) {\r\n            ctx.strokeStyle = '#00ff00';\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeRect(targetX, targetY, scaledFaceWidth, scaledFaceHeight);\r\n\r\n            // Draw eye center point\r\n            ctx.fillStyle = '#ff0000';\r\n            ctx.beginPath();\r\n            const eyeX = targetX + (faceData.eyeCenter.x - faceData.x) * scale;\r\n            const eyeY = targetY + (faceData.eyeCenter.y - faceData.y) * scale;\r\n            ctx.arc(eyeX, eyeY, 3, 0, 2 * Math.PI);\r\n            ctx.fill();\r\n          }\r\n\r\n          resolve(canvas.toDataURL('image/jpeg', 0.9));\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      };\r\n\r\n      img.onerror = () => {\r\n        reject(new Error('Failed to load image for alignment'));\r\n      };\r\n\r\n      img.src = imageUrl;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get debug information about face detection\r\n   */\r\n  async getDebugInfo(imageUrl: string): Promise<any> {\r\n    try {\r\n      const detection = await this.faceDetectService.detectFacesFromUrl(imageUrl);\r\n\r\n      return {\r\n        imageUrl,\r\n        detection,\r\n        faces: detection.faces.map(face => ({\r\n          ...face,\r\n          area: face.width * face.height,\r\n          estimatedEyes: this.estimateEyeCenter(face)\r\n        }))\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        imageUrl,\r\n        error: error instanceof Error ? error.message : 'Unknown error'\r\n      };\r\n    }\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of interest-comparator\r\n */\r\n\r\nexport * from './lib/interest-comparator.component';\r\nexport * from './lib/services/similarity.service';\r\nexport * from './lib/services/face-align.service';\r\nexport * from './lib/services/face-alignment.service';\r\nexport * from './lib/models/interest.model';\r\nexport * from './lib/models/similarity-result.model';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.SimilarityService","i2.FaceDetectService","i1.FaceDetectService"],"mappings":"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"}